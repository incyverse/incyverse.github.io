[
  {
    "name": "Alan Kay",
    "modifier": "객체지향 프로그래밍의 아버지",
    "description": "“ 나는 ‘객체 지향’이라는 말을 창안했지만, C++를 염두에 두지는 않았다. ”"
  },
  {
    "name": "Alan J. Perlis",
    "modifier": "알골 프로그램 창시자",
    "description": "“ 바보는 복잡한 것을 무시하고, 현실주의자는 괴로워하며, 피하기도 한다. 하지만 천재는 복잡한 것을 없애버린다. ”"
  },
  {
    "name": "Alan J. Perlis",
    "modifier": "알골 프로그램 창시자",
    "description": "“ 에러 없는 프로그램을 만드는 데는 두가지 방법이 있다. 그런데 세번째 것만 작동한다. ”"
  },
  {
    "name": "Andrew Hunt",
    "modifier": "The Pragmatic Programmer의 저자",
    "description": "“ 어떤 면에서 프로그래밍은 그림그리는 것과 같다. 당신은 특정한 기본 재료들과 하얀 캔버스에서 시작한다. 그것들을 가지고 무엇을 할지 결졍하기 위해서 당신은 과학, 기술, 기예의 조합을 사용한다. ”"
  },
  {
    "name": "Barack Obama",
    "modifier": "전 미국 대통령",
    "description": "“ 휴대폰을 갖고 놀지만 말고 프로그램을 만들어라. 코딩을 배우는 것이 여러분의 미래는 물론 조국의 미래에도 매우 중요하다. ”"
  },
  {
    "name": "Bill Gates",
    "modifier": "Microsoft 설립자",
    "description": "“ 640KB이면 모든 사람들에게 충분하다. ”"
  },
  {
    "name": "Bill Gates",
    "modifier": "Microsoft 설립자",
    "description": "“ 훌륭한 기계공은 일반 기계공보다 몇배의 급여를 더 높이 받는다. 그러나 훌륭한 코드를 만들어내는 개발자는 일반적인 개발자보다 1만배 이상의 가치가 있다. ”"
  },
  {
    "name": "Bill Gates",
    "modifier": "Microsoft 설립자",
    "description": "“ 코드 줄 수로 프로그래밍 진척을 측정하는 것은 무게로 비행기 제작 진척도를 측정하는 것과 같다. ”"
  },
  {
    "name": "Bjarne Stroustrup",
    "modifier": "C++ 창시자",
    "description": "“ 세상에는 딱 두 가지 프로그래밍 언어가 있다. 사람들이 욕하는 언어와 아무도 사용하지 않는 언어. ”"
  },
  {
    "name": "Bob Gray",
    "description": "“ C, C++을 쓰는 건 안전가드를 제거한 전기톱을 쓰는 것과 같다. ”"
  },
  {
    "name": "Charles Babbage",
    "modifier": "프로그래밍 가능한 컴퓨터의 개념을 처음 창시한 인물",
    "description": "“ 두 차례나, 그것도 국회의원들에게 이런 질문을 받았다. “Babbage씨, 기계에 틀린 수치를 입력해도 올바른 답이 나옵니까?” 나는 어떤 개념의 혼란에 빠져야 그러한 질문이 나오는지 도무지 이해할 수 없다. ”"
  },
  {
    "name": "Charles H. Duell",
    "modifier": "U.S. Office of Patents, Commissioner",
    "description": "“ 발명될 수 있는 것은 모두 발명되었다. ”"
  },
  {
    "name": "David Emery",
    "modifier": "오픈소스 개발자",
    "description": "“ 무료 소프트웨어를 두려워하는 사람들은 자신들의 제품이 그것보다 못하기 때문이다. ”"
  },
  {
    "name": "Dennis M. Ritchie",
    "modifier": "C언어의 창시자",
    "description": "“ C는 유별나고, 결함 있고, 엄청나게 성공했다. ”"
  },
  {
    "name": "Dennie van Tassel",
    "modifier": "프로그래밍 언어의 역사 저술자",
    "description": "“ 나는 드디어 상위호환성 Upward Compatible이 의미하는 바를 깨달았다. 그것은 옛날에 만든 실수까지 그대로 유지해야 한다는 뜻이다. 제길. ”"
  },
  {
    "name": "Eagleson’s Law",
    "description": "“ 당신이 6개월 이상 한 번도 보지 않은 코드는 다른 사람이 다시 만드는 게 훨씬 더 나을 수 있다. ”"
  },
  {
    "name": "Eric Steven Raymond",
    "modifier": "오픈소스의 거장",
    "description": "“ 눈이 많으면 찾지 못할 버그는 없다. ”"
  },
  {
    "name": "E.W. Dijkstra",
    "modifier": "독일 컴퓨터 과학자",
    "description": "“ COBOL은 사람의 마음을 망가뜨린다. 그것을 가르치는 건 범죄행위로 간주해야 한다. ”"
  },
  {
    "name": "Francis Glassborow",
    "description": "“ 좋은 프로그래머는 자기 두뇌를 사용한다. 그러나 좋은 가이드라인은 모든 케이스를 고려해야만 하는 노력을 줄여준다. ”"
  },
  {
    "name": "Frederick Philips Brooks",
    "modifier": "Mythical Man-Month 저자",
    "description": "“ 지연되는 프로젝트에 인력을 더 투입하면 오히려 더 늦어진다. ”"
  },
  {
    "name": "George Carrette",
    "description": "“ 먼저 컴퓨터 과학과 모든 이론을 배워라. 다음엔 프로그래밍 방식을 개발하라. 그러고 나선 모두 잊고 그냥 파헤쳐라. ”"
  },
  {
    "name": "Henry Petroski",
    "modifier": "실패 분석으로 유명한 엔지니어",
    "description": "“ 소프트웨어 산업의 가장 놀라운 성과는 하드웨어 산업이 꾸준히 이루고 있는 성과들을 착실하게 갉아 먹고 있다는 것이다. ”"
  },
  {
    "name": "Jeff Atwood",
    "modifier": "StackOverFlow의 창립자",
    "description": "“ 소프트웨어는 사실 의미있는 것들이 거의 없다. 만일 그런 게 있다고 할지라도, 유일한 성공척도는 고객들이 뭐가 문제인지 몰라 갈팡질팡하는 걸 도와주었냐 하는 것이다. ”"
  },
  {
    "name": "Jeff Pesis",
    "modifier": "StackOverFlow의 창립자",
    "description": "“ 하드웨어 : 사람이 발로 걷어찰 수 있는 컴퓨터의 부분 ”"
  },
  {
    "name": "Ken Pugh",
    "modifier": "프리팩토링 저자",
    "description": "“ 테스트 될 수 없다면, 요구하지 말라 ”"
  },
  {
    "name": "Kent Beck",
    "modifier": "프로그래밍 방법론의 창시자, Extreme",
    "description": "“ “낙관론”은 프로그래머라는 직업 관점에서 위험물이다. “피드백”이 해결책이다. ”"
  },
  {
    "name": "Kyle Woodbury",
    "description": "“ 프로그래밍은 자기 얼굴을 차는 것과 같아서, 조만간 코피가 날 것이다. ”"
  },
  {
    "name": "Larry Niven",
    "modifier": "유명한 SF소설가, Ringworld",
    "description": "“ 그들이 컴퓨터를 미워할 거라고 믿는 사람들이 있다. 하지만 그들이 진짜로 미워하는 건 형편없는 프로그래머들이다. ”"
  },
  {
    "name": "Larry Niven",
    "modifier": "유명한 SF소설가, Ringworld 저자",
    "description": "“ 자신이 컴퓨터를 싫어한다고 생각하는 사람들을 보면, 사실은 형편없는 프로그래머를 싫어하는 것이다. ”"
  },
  {
    "name": "Linus Torvalds",
    "modifier": "리눅스 창시자",
    "description": "“ 소프트웨어는 섹스와 같아서 공짜가 더 좋다. ”"
  },
  {
    "name": "Linus Torvalds",
    "modifier": "리눅스 창시자",
    "description": "“ 좋은 프로그래머 대부분은 돈이나 대중에게 받을 찬사를 기대하고 프로그래맹을 하지 않고 프로그래밍이 재미 있어서 한다. ”"
  },
  {
    "name": "Mark Gibbs",
    "modifier": "저널리스트",
    "description": "“ 소프트웨어 데모가 아무리 매끄럽다고 하더라도, 완벽한 프리젠테이션을 할 확률은 지켜보는 사람의 숫자에 반비레 하며 투입되는 돈에 정비레 한다. ”"
  },
  {
    "name": "Martin Golding",
    "description": "“ 결국 당신 코드를 유지보수하게 될 친구가 당신이 어디에 사는지 아는 광폭한 싸이코패스가 될 것이라고 여기고 코드를 작성하라. ”"
  },
  {
    "name": "Maurice Wilkes",
    "modifier": "EDSAC과 마이크로프로그래밍의 창시자",
    "description": "“ 우리는 프로그래밍을 시작하자 마자 생각했던 대로 만들기 쉽지 않다는 것에 놀리게 된다. 그래서 디버깅이 만들어졌다. 나는 인생의 대부분이 내 프로그램의 실수를 찾아내는데 낭비되고 있음을 알게 된 때를 정확히 기억한다. ”"
  },
  {
    "name": "Marvin Minsky",
    "modifier": "AI로 유명한 컴퓨터 과학자",
    "description": "“ 100년을 살면서 단지 300MB 밖에 기억하지 못하는 건 너무 가혹하다. CD 한 장보다 못하지 않나? 인간의 조건은 정말 점점 더 초라해지고 있다. ”"
  },
  {
    "name": "Mitch Radcliffe",
    "description": "“ 컴퓨터는 그 동안 인류 역사에서 발명했던 그 어떠한 것들 보다 더 빠르고 더 많은 실수들을 사람들이 하게 만든다. 권총과 데낄라를 제외하고는... ”"
  },
  {
    "name": "Paul Ehrlich",
    "description": "“ 실수는 사람의 것이다. 그러나 정말 일을 엉망으로 만들고 싶다면 컴퓨터가 필요하다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 모니터링하지 않는 앱을 배치하는 것은 연료계 없이 자동차 여행을 떠나는 것과 같다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 코딩 전 마음 다르고, 코딩 후 마음 다르다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 개발자 망신은 Copy & Paste가 시킨다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 길고 짧은 것은 strlen을 써봐야 안다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 잘 키운 개발자 한명 열 코더 안부럽다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 코드의 미학을 스스로 터득할 수 있지만 다른 사람들도 쉽게 배울 수 있으리라 착각하지 마라. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ C++ : 여기선 친구들이 당신의 Private Members에 접근할 수 있다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 사장도 버그날땐 온다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 생산성 : 어떤 사람들은 다른 사람들보다 5배나 우수하다. 디버깅 : 어떤 사람들은 다른 사람들보다 28배나 우수하다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 때로는 QA의 역할을 때로는 버그 수정 역할을 감당해야 한다는 사실을 인정하라. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 안에서 새는 메모리 밖에서도 샌다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 마케팅 담당자는 QA가 아니고 개발자는 홍보를 하지 않는다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 안 되는 코더는 엔터를 쳐도 PC가 다운된다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 자신의 데이터 구조를 파악하면 코드는 자연히 따라갈 것이다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 코드를 간소화하라. 읽고 이해하기 힘든 코드는 골치 아픈 잔재가 될 뿐이다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 프로그램은 오직 사람이 읽기 위해서 작성되어야 한다. 컴퓨터가 그것을 실행하는 것은 부차적인 일이다. ”"
  },
  {
    "name": "Programmer’s Proverbs",
    "description": "“ 사표쓴다 사표쓴다 하면서 프로젝트 세개 한다. ”"
  },
  {
    "name": "Rasmus Lerdorf",
    "modifier": "PHP 창시자",
    "description": "“ 나는 진정한 프로그래머가 아니다. 될 때까지 이것저것 마구 시도해보고 되면 다음으로 넘어간다. 진정한 프로그래머는 “네, 되긴 하지만 여기저기서 메모리 누수가 발생합니다. 아마 수정해야겠지요.”라고 말한다. 나는 그냥 요청이 10번 들어올 때마다 아파치를 재시작한다. ”"
  },
  {
    "name": "Robert Orben",
    "description": "“ 실수하는 것은 인간적이다. 그리고 그 실수를 두고 컴퓨터 탓을 하는 것은 더 인간적이다. ”"
  },
  {
    "name": "Robert Sewell",
    "description": "“ 자바가 정말로 Garbage collection을 한다면, 대부분의 프로그램들은 실행 중에 자기 자신을 지워버릴지도 모른다. ”"
  },
  {
    "name": "Robert L. Glass",
    "modifier": "유명한 미국 소프트웨어 엔지니어 및 작가",
    "description": "“ 누락된 요구사항은 가장 수정하기 힘든 오류다. ”"
  },
  {
    "name": "Robert X. Cringely",
    "modifier": "테크 저널리스트",
    "description": "“ 자동차가 컴퓨터와 같은 개발공정을 따랐다면, 롤스로이스는 100달러쯤에서 살 수 있고 연비도 백만마일 정도 될거다. 하지만 일년에 한 번씩 폭발해 버리는 살인머신이 되어버릴거다. ”"
  },
  {
    "name": "Steve McConnell",
    "modifier": "Construx Software Builders사의 CEO",
    "description": "“ 소프트웨어를 디자인할 때는 나는 건축가이다. 유저 인터페이스를 디자인할 때는 예술가이며, 구현할 때는 장인이 된다. 하지만 테스트를 할 때는 아마 쳐죽일 놈이 될 것이다. ”"
  },
  {
    "name": "Steve McConnell",
    "modifier": "Construx Software Builders사의 CEO",
    "description": "“ 훌륭한 코드는 훌륭한 문서보다 낫다. ”"
  },
  {
    "name": "Steve McConnell",
    "modifier": "Construx Software Builders사의 CEO",
    "description": "“ 자기가 짠 코드에서 버그를 찾는 것은 매우 어려운 일이다. 자기가 짠 코드에 버그가 없다고 생각할 때는 더욱 그러하다. ”"
  },
  {
    "name": "Ted Nelson",
    "modifier": "HTML을 만든 사회 과학자",
    "description": "“ 어떤 바보라도 컴퓨터를 사용할 수 있다. 그래서 많은 사람들이 컴퓨터를 사용한다. ”"
  },
  {
    "name": "Timm Martin",
    "description": "“ 진정한 혁신이란 시장을 만들 수는 있지만, 소유할 힘은 없다 작은 스타트업으로부터 일어난다. ”"
  },
  {
    "name": "Tom DeMarco",
    "modifier": "Peopleware 저자",
    "description": "“ 업무에서 발생하는 문제들은 대부분 기본적으로 기술의 문제가 아니라 조직사회확의 문제다. ”"
  },
  {
    "name": "Tom DeMarco",
    "modifier": "구조적 분석 및 시스템 사양 저자",
    "description": "“ 컴퓨터 시스템 분석은 아이 양육과 같다. 견딜 수 없는 피해를 줄 순 있어도 성공을 보장할 순 없다. ”"
  },
  {
    "name": "Tom DeMarco",
    "modifier": "구조적 분석 및 시스템 사양 저자",
    "description": "“ 컴퓨터 시스템 분석은 아이를 키우는 것과 같다. 극심한 상처를 줄 수는 있지만 성공을 보장해줄 수는 없다. ”"
  },
  {
    "name": "Thomas C. Gale",
    "modifier": "미국의 자동차 디자이너",
    "description": "“ 좋은 디자인은 그 때문에 소모되는 비용보다 빠르게 가치가 쌓인다. ”"
  },
  {
    "name": "Vidiu Platon",
    "description": "“ 당신의 컴퓨터에서 돌아가는 건 중요하지 않다. 당신의 컴퓨터로 서비스하는 게 아니기 때문이다. ”"
  },
  {
    "name": "Walter Mossberg",
    "modifier": "유명한 테크 저널리스트",
    "description": "“ 책 보고 따라 해도 안된다고, 스스로 자책하지 마라. 진짜 멍청이들은 일반인들이 사용할 수 없도록 하드웨어와 소프트웨어를 만든 사람들이다. 사람들이 컴퓨터를 사주는데도 말이다. 우리는 그들을 컴퓨터 전문가라고 부른다. ”"
  },
  {
    "name": "임백준",
    "modifier": "나는 프로그래머다 저자",
    "description": "“ 프로그래밍에서는 평균적인 수준의 노동력을 유지하는 것보다 영감이 샘물처럼 솟아나는 소중한 순간을 놓치지 않는 것이 중요하다. 그래서 프로그래머에게 자유는 생명이다. ”"
  }
]
